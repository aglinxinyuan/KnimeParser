digraph {
	3 [label="String Input"]
	4 [label="String Manipulation _Variable_"]
	9 [label="Create File Name"]
	10 [label="Merge Variables"]
	13 [label="WrappedNode Input"]
	14 [label="WrappedNode Output"]
	15 [label="Merge Variables"]
	99 [label="Time Generator"]
	100 [label="Table Row to Variable"]
	101 [label="Java Edit Variable"]
	1 [label="JSON Input"]
	2 [label="JSON Output"]
	5 [label="Table Writer"]
	8 [label="JSON to Table"]
	9 [label="Table Row to Variable"]
	11 [label="Variable to Table Row"]
	12 [label="Table to JSON"]
	15 [label="String Input"]
	167 [label="Missing Value"]
	1 [label="PostgreSQL Connector"]
	6 [label="Database Table Selector"]
	42 [label="Database Table Selector"]
	95 [label="Database Joiner"]
	132 [label="Database Connection Table Reader"]
	146 [label="Database Query"]
	147 [label="Database Column Filter"]
	148 [label="Database Table Selector"]
	149 [label="Database Row Filter"]
	150 [label="Database Joiner"]
	151 [label="Database Column Rename"]
	152 [label="WrappedNode Input"]
	154 [label="Database Query"]
	157 [label=GroupBy]
	158 [label="Table Row to Variable"]
	159 [label="Database Connection Table Reader"]
	160 [label="WrappedNode Output"]
	161 [label="Database Joiner"]
	162 [label="Database Joiner"]
	163 [label="Database Column Rename"]
	153 [label="Row Splitter"]
	156 [label=GroupBy]
	157 [label=GroupBy]
	158 [label=Joiner]
	159 [label="Column Rename"]
	160 [label="Math Formula"]
	161 [label="Table Row to Variable"]
	170 [label="Empty Table Switch"]
	172 [label="Add Empty Rows"]
	173 [label="End IF"]
	174 [label="Rule Engine Variable"]
	175 [label="WrappedNode Input"]
	176 [label="WrappedNode Output"]
	177 [label="Integer Input"]
	162 [label=Shuffle]
	163 [label="Row Filter"]
	164 [label=Concatenate]
	175 [label="CASE Switch Data _Start_"]
	176 [label="CASE Switch Data _End_"]
	177 [label="Rule Engine Variable"]
	3 -> 10
	4 -> 10
	9 -> 14
	10 -> 9
	13 -> 101
	15 -> 4
	99 -> 100
	100 -> 15
	101 -> 15
	1 -> 6
	1 -> 148
	1 -> 42
	6 -> 146
	42 -> 161
	42 -> 95
	95 -> 147
	132 -> 157
	132 -> 160
	146 -> 154
	146 -> 95
	147 -> 150
	148 -> 149
	149 -> 150
	149 -> 162
	150 -> 151
	151 -> 132
	152 -> 146
	154 -> 161
	157 -> 158
	158 -> 154
	159 -> 160
	161 -> 162
	162 -> 163
	163 -> 159
	153 -> 157
	153 -> 156
	156 -> 158
	157 -> 170
	158 -> 159
	159 -> 160
	160 -> 161
	161 -> 174
	170 -> 172
	170 -> 173
	172 -> 173
	173 -> 158
	174 -> 176
	175 -> 153
	177 -> 160
	162 -> 163
	163 -> 164
	164 -> 176
	175 -> 164
	175 -> 177
	175 -> 176
	177 -> 162
	0 -> 5
	1 -> 0
	1 -> 8
	5 -> 11
	8 -> 9
	9 -> 15
	9 -> 178
	11 -> 12
	12 -> 2
	15 -> 0
	167 -> 5
	178 -> 179
	178 -> 162
	178 -> 162
	179 -> 162
	176 -> 167
	rankdir=LR
}

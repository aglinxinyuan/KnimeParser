digraph {
	2 [label="Credentials Input"]
	19 [label="Database Connector"]
	20 [label="WrappedNode Input"]
	21 [label="WrappedNode Output"]
	20 [label="Database Reader"]
	39 [label="List Box Input"]
	40 [label="Table Row To Variable Loop Start"]
	42 [label="String To Number"]
	49 [label="Loop End"]
	50 [label=Pivoting]
	51 [label="Column Filter"]
	52 [label="Missing Value Column Filter"]
	53 [label="Row Filter"]
	55 [label=Unpivoting]
	56 [label="Column Filter"]
	57 [label="Column Rename _Regex_"]
	58 [label="WrappedNode Input"]
	59 [label="WrappedNode Output"]
	74 [label="Python Script _1_1_"]
	76 [label="CASE Switch Data _Start_"]
	78 [label="CASE Switch Data _End_"]
	80 [label="Domain Calculator"]
	84 [label="Constant Value Column"]
	86 [label="Empty Table Switch"]
	87 [label="Constant Value Column Filter"]
	88 [label="Reference Column Filter"]
	90 [label="Single Selection"]
	92 [label="Table Row To Variable Loop Start"]
	93 [label="Database Reader"]
	94 [label="Loop End"]
	96 [label=Pivoting]
	98 [label="Column Filter"]
	100 [label=Unpivoting]
	101 [label="Row Filter"]
	102 [label="Row Filter"]
	103 [label="Column Rename _Regex_"]
	104 [label="Column Filter"]
	105 [label="Math Formula"]
	106 [label="Double To Int"]
	107 [label="Missing Value Column Filter"]
	1 [label="Database Reader"]
	10 [label="Value Filter"]
	21 [label="Table Row To Variable Loop Start"]
	25 [label="String To Number"]
	37 [label="Table Column to Variable"]
	38 [label=GroupBy]
	58 [label="Table Row To Variable Loop Start"]
	60 [label="Missing Value"]
	73 [label="Python Script _1_1_"]
	75 [label="Java IF _Table_"]
	79 [label="Image To Table"]
	81 [label="Variable to Table Row"]
	82 [label="Table Row to Variable"]
	83 [label="End IF"]
	84 [label="String to Date_Time"]
	85 [label="Date_Time to legacy Date_Time"]
	86 [label=Sorter]
	459 [label="Color Manager"]
	460 [label="Column Filter"]
	461 [label="Line Plot _JavaScript_"]
	466 [label="Loop End _2 ports_"]
	467 [label="Loop End _2 ports_"]
	469 [label=Transpose]
	470 [label=Transpose]
	471 [label="Color Appender"]
	472 [label="Column Resorter"]
	473 [label="WrappedNode Input"]
	474 [label="WrappedNode Output"]
	475 [label="Variable to Table Column"]
	476 [label="Column Aggregator"]
	477 [label="Column Filter"]
	478 [label="Column Filter"]
	479 [label="Table Row to Variable"]
	480 [label="Java IF _Table_"]
	483 [label="Database Reader"]
	484 [label="Table Row to Variable"]
	485 [label="End IF"]
	486 [label=Sorter]
	492 [label="Table to JSON"]
	494 [label="Column Appender"]
	497 [label="Python Script _1_1_"]
	498 [label="Column Filter"]
	499 [label="Column Filter"]
	76 [label="Database Looping"]
	78 [label=RowID]
	79 [label="WrappedNode Input"]
	80 [label="WrappedNode Output"]
	2 -> 19
	19 -> 21
	20 -> 49
	39 -> 42
	40 -> 20
	42 -> 59
	42 -> 76
	49 -> 50
	50 -> 51
	51 -> 52
	52 -> 87
	52 -> 88
	53 -> 57
	55 -> 56
	56 -> 78
	57 -> 55
	58 -> 93
	58 -> 20
	74 -> 84
	76 -> 74
	76 -> 92
	76 -> 40
	78 -> 80
	80 -> 59
	84 -> 86
	86 -> 78
	87 -> 88
	88 -> 53
	90 -> 76
	92 -> 93
	93 -> 94
	94 -> 96
	96 -> 98
	98 -> 107
	100 -> 104
	101 -> 102
	102 -> 103
	103 -> 100
	104 -> 105
	105 -> 106
	106 -> 78
	107 -> 101
	1 -> 86
	10 -> 21
	21 -> 81
	25 -> 485
	37 -> 461
	38 -> 60
	58 -> 21
	60 -> 37
	73 -> 84
	75 -> 73
	75 -> 480
	79 -> 475
	81 -> 75
	82 -> 1
	83 -> 466
	83 -> 479
	83 -> 460
	83 -> 38
	84 -> 85
	85 -> 83
	86 -> 25
	459 -> 478
	459 -> 471
	460 -> 461
	461 -> 79
	461 -> 492
	466 -> 467
	466 -> 499
	467 -> 471
	467 -> 476
	469 -> 466
	470 -> 467
	471 -> 472
	472 -> 477
	472 -> 498
	473 -> 483
	473 -> 10
	473 -> 1
	473 -> 58
	475 -> 494
	476 -> 459
	477 -> 474
	478 -> 474
	479 -> 475
	480 -> 484
	480 -> 82
	483 -> 486
	484 -> 483
	485 -> 83
	486 -> 485
	492 -> 494
	494 -> 469
	498 -> 497
	499 -> 470
	76 -> 78
	78 -> 80
	79 -> 76
	79 -> 76
	70 -> 71
	70 -> 474
	70 -> 475
	71 -> 475
	71 -> 474
	71 -> 474
	rankdir=LR
}
